from tkinter import *

class Register():
    def __init__(self, win, nametext, favcolor, vefifycolor):
        self.win = win
        self.nametext = nametext
        self.favcolor = favcolor
        self.vefifycolor = vefifycolor

    #if the information given matches store it, close this window and open a new one 
    def save(self):
        #checks to see if the two colors they entered are equal
        if self.favcolor == self.vefifycolor:
            #opens a new file and calls it username.txt or opens the existing file called username.txt and writes over the top of anything that's already there ("w")
           
           



            #opens a new file and calls it registration.txt and makes it appendable
            self.reg = open("reg.txt","a")
            self.reg.write(self.nametext  + self.favcolor +"\n")
            
            self.win.destroy() #closes the login window

class Login():
    def __init__(self, win, nametext, favcolor, vefifycolor):
        self.win = win
        self.nametext = nametext
        self.favcolor = favcolor
        self.vefifycolor = vefifycolor

    def validation(self):
        #opens the registration.txt file and makes it readable ("r")
        self.file = open("reg.txt", "r")
        self.line = self.file.readlines()#reads the lines in the file
        validate = 0 #defines a variable that will equal 0 if the information doesn't match and 1 if it does
        

        #checks each line in the registration file to determine if the user exists (turns validate to 1 if it does)
        #if the information matches our files, a new window is opened that calls on the Success class
        self.end = "\n"
        if (self.nametext  + self.favcolor +"\n") in self.line:
            win2 = Tk()
            logged = Success(win2)

        
        
        
    
    



        
        #if validate is still 0, a label is created to tell the user their information doesn't match our records



        self.file.close() #closes the file to keep it secure

class Success(): #This class creates a new window that tells the user they were successful in logging in
    def __init__(self, win2):
        self.win2 = win2
        self.win2.title("Success")
        self.win2.configure(background = "orange")
        self.win2.geometry("550x550+800+800")

        self.label = Label(self.win2, text = ("Successful login! Welcome."))
        self.label.pack()





win = Tk()
win.geometry("550x550+800+800")
win.title("Let's Learn About You!")

#defining the variables for collecting user data
user = StringVar()
colorchoice = StringVar()
verify = StringVar()

def register():
    #collects the information from the entry boxes
    nametext = username.get()
    favcolor = color.get()
    vefifycolor = recolor.get()

    

    #creates an instance of the Register class and calls the save function within
    getstarted = Register(win, nametext, favcolor, vefifycolor)
    getstarted.save()

def datacheck():
    #collects the information from the entry boxes
    nametext = username.get()
    favcolor = color.get()
    vefifycolor = recolor.get()


    

    #creates an instance of the Login class and calls the validation function within
    moveon = Login(win, nametext, favcolor, vefifycolor)
    moveon.validation()
    

    
    

#Creating the labels and entry boxes for users to enter data    
userlabel = Label(win, text = "What's Your Name", bg= "black", fg="white")
userlabel.place(x=70, y=50)

username = Entry(win, textvariable=user, bg = "pink")
username.place(x=275, y=50)

passlabel = Label(win, text = "What's Your Favorite Color?", bg = "purple", fg="white")
passlabel.place(x=70, y=100)

color = Entry(win, textvariable=colorchoice, bg = "yellow")
color.place(x=275, y=100)

colorlabel = Label(win, text = "Re-enter your color choice", bg = "purple", fg="white")
colorlabel.place(x=70, y=150)

recolor = Entry(win, textvariable=verify, bg = "yellow")
recolor.place(x=275, y=150)

#when the Login button is clicked, the collectdata function is called
login = Button(win, text = "Login", highlightbackground = "purple", command =datacheck)
login.place(x=200, y=225)

#when the Register button is clicked, the register function is called
register = Button(win, text = "Register", highlightbackground = "purple", command=register)
register.place(x=300, y=225)
